import zipfile 
import pandas as pd

column_names = [
    "Reference Pool ID",
    "Loan Identifier",
    "Monthly Reporting Period",
    "Channel",
    "Master Servicer",
    "Original Interest Rate",
    "Current Interest Rate",
    "Original UPB",
    "UPB at Issuance",
    "Original Loan Term",
    "Origination Date",
    "First Payment Date",
    "Loan Age",
    "Remaining Months to Legal Maturity",
    "Current Actual UPB",
    "Remaining Months to Maturity",
    "Maturity Date",
    "Original Loan to Value Ratio (LTV)",
    "Original Combined Loan to Value Ratio (CLTV)",
    "Number of Borrowers",
    "Debt-To-Income (DTI)",
    "Borrower Credit Score at Origination",
    "Co-Borrower Credit Score at Origination",
    "Property Type",
    "Number of Units",
    "Occupancy Status",
    "Property State",
    "Metropolitan Statistical Area (MSA)",
    "Zip Code Short",
    "Mortgage Insurance Percentage",
    "Amortization Type",
    "Loan Purpose",
    "First Time Home Buyer Indicator",
    "Prepayment Penalty Indicator",
    "Interest Only Loan Indicator",
    "Months to Amortization",
    "Current Loan Delinquency Status",
    "Total Principal Current",
    "Unscheduled Principal Current",
    "Foreclosure Costs",
    "Property Preservation and Repair Costs",
    "Asset Recovery Costs",
    "Miscellaneous Holding Expenses and Credits",
    "Associated Taxes for Holding Property",
    "Net Sales Proceeds",
    "Credit Enhancement Proceeds",
    "Repurchase Make Whole Proceeds",
    "Other Foreclosure Proceeds",
    "Disposition Date",
    "Foreclosure Date",
    "Last Paid Installment Date",
    "Current Period Modification Loss Amount",
    "Cumulative Modification Loss Amount",
    "Current Period Credit Event Net Gain or Loss",
    "Cumulative Credit Event Net Gain or Loss",
    "ARM Product Type",
    "Initial Fixed-Rate Period",
    "Interest Rate Adjustment Frequency",
    "Next Interest Rate Adjustment Date",
    "Next Payment Change Date",
    "Index",
    "ARM Initial Fixed-Rate Period â‰¤ 5 YR Indicator",
    "High Balance Loan Indicator",
    "Property Valuation Method",
    "ARM Cap Structure",
    "Initial Interest Rate Cap Up Percent",
    "Periodic Interest Rate Cap Up Percent",
    "Lifetime Interest Rate Cap Up Percent",
    "Mortgage Margin",
    "Zero Balance Code",
    "Alternative Delinquency Resolution Count",
    "Payment Deferral Modification Event Indicator",
    "Current Period Credit Event Net Gain or Loss",
    "Cumulative Credit Event Net Gain or Loss",
    "Modification Flag",
    "Total Payments Made",
    "Payment Change Indicator",
    "Bankruptcy Indicator",
    "Foreclosure Prevention Indicator",
    "Final Payment Date",
    "Deferment Indicator",
    "Loan Modification Indicator",
    "Total Loss Mitigation Amount",
    "Loan Status",
    "Payment History Rating",
    "Borrower Payment History",
    "Remaining Payment Term",
    "Principal Balance Change",
    "Payment Change Date",
    "ARM Status",
    "Prior Loan Term",
    "Original Discount Points",
    "Current Loan Type",
    "Guarantor Type",
    "Guarantee Fee",
    "Original Loan Type",
    "Principal Payment Type",
    "Current Payment Type",
    "Borrower Type",
    "Co-Borrower Type",
    "Loan Performance Date",
    "Property Valuation Date",
    "Last Payment Date",
    "Scheduled Payment Amount",
    "Actual Payment Amount",
    "Delinquency Count",
    "Modification Date",
    "Loan Purchase Date",
    "Current UPB at Issuance",
    "Credit Event Indicator"
]


def unzip_quarterly_data(file_path, extract_to='../data/raw/'):
    try:
        with zipfile.ZipFile(file_path, 'r') as zip_ref:
            zip_ref.extractall(extract_to)
        print(f"Unzipped '{file_path}' to '{extract_to}' successfully.")
    except zipfile.BadZipFile:
        print(f"Error: '{file_path}' is not a zip file or it is corrupted.")
    except Exception as e:
        print(f"An error occurred: {e}")

def load_data(file_path):
    return pd.read_csv(file_path)


